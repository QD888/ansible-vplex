# Create VPLEX virtual volumes across clusters and add it to a storage view
---
- name: VPLEX Metro End-to-End Provisioning
  hosts: localhost
  connection: local
  vars_files:
    - vars/connection.yml
    - vars/credentials.yml
    - vars/volume_name.yml

  vars:
    Vplexinput: &connection_vars
      vplexhost: "{{ vplexhost }}"
      vplexuser: "{{ vplexuser }}"
      vplexpassword: "{{ vplexpassword }}"
      verifycert: false

  tasks:
    - name: Create raid-1 device on VPLEX setup
      include_role:
        name: createdevice
      vars:
        cluster_name: "{{ cluster_name_1 }}"
        storage_volume_id: "{{ stor_volid_1 }}"

    - name: Get the device name list from first cluster
      set_fact:
        dev1: "{{ device.device_details.name }}"

    - name: Create raid-1 device on VPLEX setup
      include_role:
        name: createdevice
      vars:
        cluster_name: "{{ cluster_name_2 }}"
        storage_volume_id: "{{ stor_volid_2 }}"

    - name: Get the device name list from second cluster
      set_fact:
        dev2: "{{ device.device_details.name }}"

    - name: Create distributed device on VPLEX setup
      dellemc_vplex_distributed_device:
        <<: *connection_vars
        distributed_device_name: 'dd_test_{{ device.device_details.name }}'
        target_cluster: 'cluster-2'
        target_device: '{{ dev2 }}'
        source_cluster: 'cluster-1'
        source_device: '{{ dev1 }}'
        rule_set: 'cluster-1-detaches'
        sync: true
        state: 'present'
      register: create_dd

    - name: Get distributed device details
      dellemc_vplex_distributed_device:
        <<: *connection_vars
        distributed_device_name: 'dd_test_{{ device.device_details.name }}'
        state: 'present'
      register: get_dd
      until: get_dd.dist_device_details.rebuild_status != "rebuilding"
      retries: 100
      delay: 5

    - name: Create distributed virtual volume on VPLEX setup
      dellemc_vplex_distributed_virtual_volume:
        <<: *connection_vars
        distributed_virtual_volume_name: '{{ dist_vol_name }}'
        distributed_device_name: 'dd_test_{{ device.device_details.name }}'
        state: 'present'
      register: create_dvv

    - name: Create new storage view
      include_role:
        name: createstorageview
      vars:
        dist_virtual_volume: "{{ create_dvv.dist_vv_details.name }}"

    - name: Print storage view details
      debug: var=storage_view
